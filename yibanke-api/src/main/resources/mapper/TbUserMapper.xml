<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.yibanke.api.db.dao.TbUserMapper" >
  <resultMap id="BaseResultMap" type="com.example.yibanke.api.db.pojo.TbUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="tel" property="tel" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="hiredate" property="hiredate" jdbcType="DATE" />
    <result column="root" property="root" jdbcType="BIT" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.yibanke.api.db.pojo.TbUser" extends="BaseResultMap" >
    <result column="role" property="role" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, open_id, nickname, photo, name, sex, tel, email, hiredate, 
    root, dept_id, status, create_time
  </sql>
  <sql id="Blob_Column_List" >
    role
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.example.yibanke.api.db.pojo.TbUser" >
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="hiredate != null" >
        hiredate,
      </if>
      <if test="root != null" >
        root,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="role != null" >
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null" >
        #{hiredate,jdbcType=DATE},
      </if>
      <if test="root != null" >
        #{root,jdbcType=BIT},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        #{role,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.yibanke.api.db.pojo.TbUser" >
    update tb_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null" >
        hiredate = #{hiredate,jdbcType=DATE},
      </if>
      <if test="root != null" >
        root = #{root,jdbcType=BIT},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.yibanke.api.db.pojo.TbUser" >
    update tb_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      tel = #{tel,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      hiredate = #{hiredate,jdbcType=DATE},
      root = #{root,jdbcType=BIT},
      dept_id = #{deptId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      role = #{role,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.yibanke.api.db.pojo.TbUser" >
    update tb_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      tel = #{tel,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      hiredate = #{hiredate,jdbcType=DATE},
      root = #{root,jdbcType=BIT},
      dept_id = #{deptId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updatePassword" parameterType="HashMap">
    UPDATE tb_user
    SET password = HEX(AES_ENCRYPT(#{password}, username))
    WHERE id = #{userId}
  </update>




  <select id="searchUserSummary" parameterType="int" resultType="HashMap">
        SELECT u.name, u.photo, d.dept_name AS deptName
        FROM tb_user u LEFT JOIN tb_dept d ON u.dept_id=d.id
        WHERE u.id=#{userId} AND u.status=1
    </select>

  <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id=#{userId} AND u.status=1;
    </select>

  <!--登录-->
  <select id="login" parameterType="HashMap" resultType="Integer">
    SELECT id
    FROM tb_user
    WHERE username = #{username}
    AND password = HEX(AES_ENCRYPT(#{password}, #{username}))
    LIMIT 1;
    </select>

  <select id="searchAllUser" resultType="HashMap">
        SELECT id,`name`
        FROM tb_user
        WHERE status = 1
    </select>

  <select id="searchById" parameterType="int" resultType="HashMap">
        SELECT
            id, username, name, sex, tel, email, hiredate, role, dept_id AS deptId, status,
            CAST(AES_DECRYPT(UNHEX(password),username) AS CHAR) AS password
        FROM tb_user
        WHERE id=#{userId}
    </select>

  <!--  员工信息查询 分页显示-->
  <select id="searchUserByPage" parameterType="HashMap" resultType="HashMap">
    SELECT
    DISTINCT u.id,
    u.name,
    u.sex,
    u.tel,
    u.email,
    d.dept_name AS dept,
    u.hiredate,
    u.root,
    u.status,
    ( SELECT GROUP_CONCAT( role_name separator "，" ) FROM tb_role WHERE JSON_CONTAINS ( u.role, CONVERT ( id, CHAR ) ) ) AS roles
    FROM tb_user u
    JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
    LEFT JOIN tb_dept d ON u.dept_id = d.id
    WHERE 1=1
    <if test="name!=null">
      AND u.name LIKE "%${name}%"
    </if>
    <if test="sex!=null">
      AND u.sex=#{sex}
    </if>
    <if test="role!=null">
      AND r.role_name=#{role}
    </if>
    <if test="deptId!=null">
      AND d.id=#{deptId}
    </if>
    <if test="status!=null">
      AND u.status=#{status}
    </if>
    LIMIT #{start}, #{length}
  </select>
  <!--  分页查询计算总数-->
  <select id="searchUserCount" parameterType="HashMap" resultType="long">
    SELECT
    COUNT(DISTINCT u.id)
    FROM tb_user u
    JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
    WHERE 1=1
    <if test="name!=null">
      AND u.name LIKE "%${name}%"
    </if>
    <if test="sex!=null">
      AND u.sex=#{sex}
    </if>
    <if test="role!=null">
      AND r.role_name=#{role}
    </if>
    <if test="deptId!=null">
      AND u.dept_id=#{deptId}
    </if>
    <if test="status!=null">
      AND u.status=#{status}
    </if>
  </select>

<!--  插入新用户-->
  <insert id="insert" parameterType="com.example.yibanke.api.db.pojo.TbUser">
    INSERT INTO tb_user
    SET
    <if test="username!=null">
      username = #{username},
    </if>
    <if test="password!=null">
      password = HEX(AES_ENCRYPT(#{password},#{username})),
    </if>
    <if test="openId!=null">
      open_id = #{openId},
    </if>
    <if test="nickname!=null">
      nickname = #{nickname},
    </if>
    <if test="photo!=null">
      photo = #{photo},
    </if>
    <if test="name!=null">
      name = #{name},
    </if>
    <if test="sex!=null">
      sex = #{sex},
    </if>
    <if test="tel!=null">
      tel = #{tel},
    </if>
    <if test="email!=null">
      email=#{email},
    </if>
    <if test="hiredate!=null">
      hiredate = #{hiredate},
    </if>
    role = #{role},
    <if test="root!=null">
      root = #{root},
    </if>
    <if test="deptId!=null">
      dept_id = #{deptId},
    </if>
    status = #{status},
    create_time = #{createTime}
  </insert>

  <!--修改用户信息-->
  <update id="update" parameterType="HashMap">
    UPDATE tb_user
    SET
    <if test="username!=null and password!=null">
      username = #{username},
      password = HEX(AES_ENCRYPT(#{password},#{username})),
    </if>
    <if test="name!=null">
      name = #{name},
    </if>
    <if test="sex!=null">
      sex = #{sex},
    </if>
    <if test="tel!=null">
      tel = #{tel},
    </if>
    <if test="email!=null">
      email = #{email},
    </if>
    <if test="hiredate!=null">
      hiredate = #{hiredate},
    </if>
    <if test="role!=null">
      role = #{role},
    </if>
    <if test="root!=null">
      root = #{root},
    </if>
    <if test="deptId!=null">
      dept_id = #{deptId},
    </if>
    <if test="status!=null">
      status = #{status},
    </if>
    id=id
    WHERE id=#{userId}
  </update>

  <!--  删除非超管的员工信息-->
  <delete id="deleteUserByIds">
    DELETE FROM tb_user
    WHERE id IN
    <foreach collection="array" open="(" separator="," close=")" item="one">
      #{one}
    </foreach>
    AND root=FALSE
  </delete>

</mapper>