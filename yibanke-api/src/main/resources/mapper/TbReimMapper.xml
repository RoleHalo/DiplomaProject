<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.yibanke.api.db.dao.TbReimMapper" >
  <resultMap id="BaseResultMap" type="com.example.yibanke.api.db.pojo.TbReim" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="anleihen" property="anleihen" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="type_id" property="typeId" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="instance_id" property="instanceId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.yibanke.api.db.pojo.TbReim" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, amount, anleihen, balance, type_id, status, instance_id, create_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_reim
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_reim
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.yibanke.api.db.pojo.TbReim" >
    insert into tb_reim (id, user_id, amount, 
      anleihen, balance, type_id, 
      status, instance_id, create_time, 
      content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{anleihen,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, #{typeId,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{instanceId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.yibanke.api.db.pojo.TbReim" >
    insert into tb_reim
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="anleihen != null" >
        anleihen,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="instanceId != null" >
        instance_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="anleihen != null" >
        #{anleihen,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="instanceId != null" >
        #{instanceId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.yibanke.api.db.pojo.TbReim" >
    update tb_reim
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="anleihen != null" >
        anleihen = #{anleihen,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="instanceId != null" >
        instance_id = #{instanceId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.yibanke.api.db.pojo.TbReim" >
    update tb_reim
    set user_id = #{userId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      anleihen = #{anleihen,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      type_id = #{typeId,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      instance_id = #{instanceId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.yibanke.api.db.pojo.TbReim" >
    update tb_reim
    set user_id = #{userId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      anleihen = #{anleihen,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      type_id = #{typeId,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      instance_id = #{instanceId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>